---
// components
import BaseHead from '@/components/BaseHead'
import Header from '@/components/Header'
import Footer from '@/components/Footer'
import PostSnippet from '@/components/articles/Snippet'
import Pagination from '@/components/Pagination'
import Sidebar from '@/components/Sidebar'

export async function getStaticPaths({ paginate }) {
    const posts = await Astro.fetchContent("./*.md").reverse();

    return paginate(posts, { pageSize: 4 });
}

const allPosts = await Astro.fetchContent("./*.md");
const categories = [...new Set(allPosts.map(post => post.category))];
const tags = [...new Set([].concat.apply([], allPosts.map(post => post.tags)))];

const { page } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <BaseHead
        title="Articles - Digital Marketing, Jamstack Programming and Car Photography"
    />
</head>

<body>
    <main>
        <header class="container">
            <Header />

            <div class="constraint-sm">
                <h1>Articles</h1>
                <p>
                    Occasionally you'll catch me writing down my thoughts on the intersection of <a href="#">digital marketing</a>, <a href="#">photography</a> and <a href="#">cars</a> (as if there is such a thing).
                </p>
            </div>
        </header>

        <section class="container" style="display: flex; justify-content: space-between; gap: var(--space-xl);">
            <div class="constraint-sm">
                <div class="posts" id="anchor">
                    {page.data.map(p =>
                        <PostSnippet post={p} />
                    )}
                </div>

                <Pagination page={page} />
            </div>

            <Sidebar>
                <div class="categories">
                    <h4>Categories</h4>
                    {categories.map(c =>
                        <a class="category" href="/category/${c}">{c}</a>
                    )}
                </div>

                <div class="tags">
                    <h4>Tags</h4>
                    {tags.map(t =>
                        <a class="tag" href="/tag/${t}">{t}</a>
                    )}
                </div>
            </Sidebar>
        </section>

        <Footer />
    </main>
</body>
</html>

<style lang="scss">
    @use '../../assets/styles/breakpoints' as *;

    .categories {
        h4 { margin-top: 0; }
        
        a {
            :not(:last-child) {
                margin-bottom: var(--space-xs);
            }
        }
    }

    .category {
        display: block;
        text-transform: capitalize;
    }

    .tag:not(:last-child)::after {
        content: ', '
    }
</style>