---
// modules
import { SEO } from "astro-seo";

// components
import BaseHead from '@/components/BaseHead'
import BaseLayout from '@/components/BaseLayout'
import Heading from '@/components/Heading'
import Flex from '@/components/Flex'
import Content from '@/components/Content'
import PostSnippet from '@/components/PostSnippet'
import Pagination from '@/components/Pagination'
import Sidebar from '@/components/Sidebar'
import Tags from '@/components/Tags'
import Categories from '@/components/Categories'

// data
import Settings from '@/data/settings'

export async function getStaticPaths({rss, paginate}) {
    const posts = await Astro.fetchContent("./*.md");
    const sortedPosts = posts.sort((a, b) => new Date(b.date) - new Date(a.date));

    rss({
        title: 'Erik S. Olsen',
        description: 'Erik Olsen lives in Austin, Texas and is the Director of Digital Engagement at ICG America',
        customData: `<language>en-us</language>`,
        // The list of items for your RSS feed, sorted.
        items: sortedPosts.map(item => ({
            title: item.title,
            description: item.description,
            link: item.url,
            pubDate: item.date,
        })),
        
        // Optional: Customize where the file is written to.
        // Defaults to "/rss.xml"
        //dest: "/my/custom/feed.xml",
  });

    return paginate(sortedPosts, { pageSize: Settings.pageSize });
}

// get all the posts and send to tag and category component
const allPosts = await Astro.fetchContent("./*.md");
const tags = [...new Set([].concat.apply([], allPosts.map(post => post.tags)))];
const categories = [...new Set(allPosts.map(post => post.category))];

const { page } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <BaseHead />
    <SEO
        title="Blog - Digital Marketing, Jamstack Programming and Car Photography"
        description="Erik Olsen is the Director of Digital Engagement at ICG America in Austin, TX. He&#39;s also an automotive photographer shooting photos at Austin car shows."
    />
</head>

<body>
    <BaseLayout>
        <Heading>
            <h1>Blog</h1>
        </Heading>
        
        <Flex>
            <Content>
                {page.currentPage > 1 ? `` : 
                    `<article>
                        <p>Occasionally you'll catch me writing down my thoughts on the intersection of <a href="blog/tags/code" title="Coding Posts">coding</a>, <a href="blog/tags/photography" title="Photography Posts">photography</a> and <a href="blog/tags/cars" title="Car Posts">cars</a> (as if there is such a thing).</p>
                    </article>`
                }
                
                <section class="posts">
                    {page.data.map(p =>
                        <PostSnippet post={p} />
                    )}
                </section>

                <Pagination page={page} />
            </Content>

            <Sidebar>
                <div>
                    <h4>Categories</h4>
                    <Categories categories={categories} base="blog" />
                    
                    <h4>Tags</h4>
                    <Tags tags={tags} base="blog" />
                </div>
            </Sidebar>
        </Flex>
    </BaseLayout>
</body>
</html>