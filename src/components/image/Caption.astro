---
// modules
import fs from 'fs'
import path from 'path';
import { fullDate } from '@/functions/DateTime'
import exifr from 'exifr'

// data
import settings from "../../data/settings.json"

// props
export interface Props {
    file: string;
}
const { file } = Astro.props;

const localUrl = `${settings.image.directory.local}${file}`; // create path to image
const fsFile = fs.readFileSync(localUrl); // read the image

// collect all the exif, iptc and ifd0 data from the image
const exifrOptions = {
    iptc: ['ObjectName', 'Caption', 'Byline'],
    exif: ['LensModel', 'FNumber', 'ISO', 'ExposureTime', 'DateTimeOriginal', 'FocalLength'],
    ifd0: ['Make', 'Model'],
    gps: false,
    mergeOutput: true,
}
const metadata = await exifr.parse(fsFile, exifrOptions);

// build the array to hold all the image data
const imageData = {
    "filename": path.basename(localUrl, '.jpg'),
    "date": fullDate(metadata.DateTimeOriginal),
    "title": metadata.ObjectName,
    "caption": metadata.Caption,
    "author": metadata.Byline,
    "cameraMake": metadata.Make,
    "cameraModel": metadata.Model,
    "lens": metadata.LensModel,
    "aperture": metadata.FNumber,
    "iso": metadata.ISO,
    "focalLength": metadata.FocalLength,
    "exposure": 1 / metadata.ExposureTime,
};
---

<style lang="scss">
    @use '../../assets/styles/breakpoints' as *;

    figcaption {
        margin: 0 var(--space-md);
    }
    .summary {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-top: var(--space-xs);
        margin-bottom: var(--space-md);
        font-size: var(--text-lg);

        .title {
            font-weight: 500;
        }
    }

    .metadata {
        opacity: 0;
        display: none;
        flex-direction: column;
        gap: var(--space-sm);
        transform: scale(0);
        transition: transform 1s ease-in-out, opacity .3s ease-in-out;
        animation: anim .1s ease-in-out;

        &.active {
            display: flex;
            transform: scale(1);
            opacity: 1;
        }

        div {
            font-size: var(--text-sm);
            font-weight: 300;
        }
        a {
            margin-top: var(--space-sm);
        }
    }

    @keyframes anim {
        0% {
            display: none;
            opacity: 0;
        }
        1% {
            display: block;
            opacity: 0;
            transform: translateY(-1em);
        }
        100% {
            opacity: 1;
            transform: tranlateY(0);
        }
    }
</style>

<figcaption>
    <div class="summary">
        <div class="title">
            {imageData.title}
        </div>

        <div class="actions">
            <button onclick={`showMeta('${imageData.filename}')`} aria-label="Photo details toggle">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                </svg>
            </button>
        </div>
    </div>

    <div class={`metadata ${imageData.filename}`}>
        <div>{metadata.Caption}</div>
        <div>Captured on {imageData.date}</div>
        <div>Shot with a {metadata.LensModel} on a {metadata.Make} {metadata.Model}</div>
        <div>f/{metadata.FNumber}&nbsp;&nbsp;{metadata.ISO} ISO&nbsp;&nbsp;1/{imageData.exposure}s</div>
    </div>
</figcaption>