---
// modules
import fs from 'fs'
import path from 'path';
import moment from 'moment'
import exifr from 'exifr'

// data
import settings from "../../data/settings.json"

// props
export interface Props {
    file: string;
}
const { file } = Astro.props;

let localUrl = `${settings.image.directory.local}${file}`;

// collect all the exif and iptc data from the image
let exifrOptions = {
    iptc: ['ObjectName', 'Caption', 'Byline'],
    exif: ['LensModel', 'FNumber', 'ISO', 'ExposureTime', 'DateTimeOriginal', 'FocalLength'],
    ifd0: ['Make', 'Model'],
    gps: false,
    mergeOutput: true
}

var fsFile = fs.readFileSync(localUrl);
var filename = path.basename(localUrl, '.jpg');
var metadata = await exifr.parse(fsFile, exifrOptions);

const captureDate = moment(metadata.DateTimeOriginal).format("MMMM Do YYYY, h:mm:ssa");
const exposure = 1 / metadata.ExposureTime;
---

<style lang="scss">
    @use '../../assets/styles/breakpoints' as *;

    figcaption {
        margin: 0 var(--space-md);
    }
    .summary {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-top: var(--space-xs);
        margin-bottom: var(--space-md);
        font-size: var(--text-lg);

        .title {
            font-weight: 500;
        }
    }

    .metadata {
        opacity: 0;
        display: none;
        flex-direction: column;
        gap: var(--space-sm);
        transform: scale(0);
        transition: transform .3s ease-in-out, opacity .3s ease-in-out;
        animation: anim .3s ease-in-out;

        &.active {
            display: flex;
            transform: scale(1);
            opacity: 1;
        }

        div {
            font-size: var(--text-sm);
            font-weight: 300;
        }
        a {
            margin-top: var(--space-sm);
        }
    }

    @keyframes anim {
        0% {
            display: none;
            opacity: 0;
        }
        1% {
            display: block;
            opacity: 0;
            transform: scale(0);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }
</style>

<figcaption>
    <div class="summary">
        <div class="title">
            {metadata.ObjectName}
        </div>
        <div class="actions">
            <button onclick={`showMeta('${filename}')`} aria-label="Photo details toggle">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
                    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
                </svg>
            </button>
        </div>
    </div>

    <div class={`metadata ${filename}`}>
        <div>Captured on {captureDate}</div>
        <div>Shot with a {metadata.LensModel} on a {metadata.Make} {metadata.Model}</div>
        <div>f/{metadata.FNumber}&nbsp;&nbsp;{metadata.ISO} ISO&nbsp;&nbsp;1/{exposure}s</div>
    </div>
</figcaption>