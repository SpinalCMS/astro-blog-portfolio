---
// components
import Image from "@/components/image/Image"

// functions
import { timeAgo } from "@/functions/DateTime"

// props
export interface Props {
    shoot: object
}
const { shoot } = Astro.props;
---

<div class="shoot">
    <div class="cover zoom">
        <a href={shoot.url} title={shoot.title}>
            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-arrow-right-circle-fill" viewBox="0 0 16 16">
                <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z"/>
            </svg>

            <Image file={shoot.hero} />
        </a>
    </div>

    <div class="content">
        <a href={shoot.url} title={shoot.title}>
            <h2 class="h4">{shoot.title}</h2>
        </a>
        
        <div class="meta">
            <time>{timeAgo(shoot.date)}</time>
            <a class="category" href={`/photography/categories/${shoot.category}`} title={shoot.category}>{shoot.category}</a>
        </div>

        <p>{shoot.description}</p>
    </div>
</div>

<style lang="scss">
    @use "../assets/styles/breakpoints" as *;

    .shoot {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: 1fr;
        gap: var(--space-lg);

        .cover {
            grid-column: 1 / span 3;
            height: 200px;
            width: 100%;
            position: relative;

            @include breakpoint (md) {
                grid-column: 1;
            }

            svg {
                display: none;
                position: absolute;
                top: 50%;
                left: 50%;
                z-index: 10;
                transform: translate(-50%, -50%);
                
                width: 30px;
                color: var(--color-white);
            }

            :global(img) {
                object-fit: cover;
                width: 100%;
                height: 100%;
            }
            :hover {
                :global(img) {
                    filter: brightness(0.5);
                }
                svg {
                    display: block;
                }
            }
        }

        .content {
            grid-column: 1 / span 3;
            display: flex;
            flex-direction: column;
            align-self: center;
            gap: var(--space-sm);
            
            @include breakpoint(md) {
                grid-column: 2 / span 2;
                
            }

            h2 { margin: 0; }
            p {
                margin: 0;
                font-size: var(--text-md);
                font-weight: 350;
            }

            .meta {
                display: flex;
                flex-direction: row;
                gap: var(--space-xs);
                color: var(--color-grayscale-60);
                font-weight: 300;

                @include breakpoint(lg) {
                    flex-direction: row;
                    gap: var(--space-md);
                }

                .category {
                    text-transform: capitalize;
                }
            }
        }
    }
</style>