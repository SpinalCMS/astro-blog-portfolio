---
// props
export interface Props {
    headers: object,
}
const { headers } = Astro.props;
---

<style>
    .depth-3 {
        @apply ml-4;
    }
    .depth-4 {
        @apply ml-8;
    }
    .active { @apply font-semibold}
</style>

<div>
    <ul class="space-y-2 toc">
        {headers.map(h => 
            <li class={`depth-${h.depth} font-light`}>
                <a class="thin-underline" href={`#${h.slug}`}>{h.text}</a>
            </li>
        )}
    </ul>
</div>

<script>
    window.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {                
                const id = entry.target.getAttribute('id');

                if (entry.intersectionRatio > 0) {
                    document.querySelector(`ul.toc li a[href="#${id}"]`).parentElement.classList.add('active');
                } else {
                    document.querySelector(`ul.toc li a[href="#${id}"]`).parentElement.classList.remove('active');
                }
            });
        });

        // Track all sections that have an `id` applied
        document.querySelectorAll('h2[id], h3[id], h4[id]').forEach((section) => {
            observer.observe(section);
        });
    });
</script>